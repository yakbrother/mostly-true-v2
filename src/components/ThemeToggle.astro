---
// Theme toggle component for light/dark mode
---

<button id="theme-toggle" aria-label="Toggle dark mode">
  <span class="theme-toggle-text">Dark</span>
</button>

<style>
  #theme-toggle {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    color: var(--color-text);
    font-size: var(--s0);
    transition: color 0.2s ease;
  }

  #theme-toggle:hover {
    color: var(--color-accent);
  }

  html.dark #theme-toggle .theme-toggle-text {
    content: "Light";
  }
</style>

<script>
  // Get the theme toggle button
  const themeToggle = document.getElementById('theme-toggle');
  const themeToggleText = themeToggle?.querySelector('.theme-toggle-text');
  
  // Check if dark mode is enabled
  const isDarkMode = document.documentElement.classList.contains('dark');
  
  // Update button text based on current theme
  if (themeToggleText) {
    themeToggleText.textContent = isDarkMode ? 'Light' : 'Dark';
  }

  // Toggle dark mode on click
  themeToggle?.addEventListener('click', () => {
    document.documentElement.classList.toggle('dark');
    const isDark = document.documentElement.classList.contains('dark');
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
    
    // Update button text
    if (themeToggleText) {
      themeToggleText.textContent = isDark ? 'Light' : 'Dark';
    }
  });

  // Initialize theme based on localStorage or user preference
  document.addEventListener('DOMContentLoaded', () => {
    const theme = localStorage.getItem('theme') || 
      (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
    
    if (theme === 'dark') {
      document.documentElement.classList.add('dark');
      if (themeToggleText) themeToggleText.textContent = 'Light';
    } else {
      document.documentElement.classList.remove('dark');
      if (themeToggleText) themeToggleText.textContent = 'Dark';
    }
  });
</script>
