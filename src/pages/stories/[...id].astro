---
import { type CollectionEntry, getCollection, render } from "astro:content";
import MainLayout from "@layouts/MainLayout.astro";
import FormattedDate from "@components/FormattedDate.astro";
import BackToPrevious from "@components/BackToPrevious.astro";


export async function getStaticPaths() {
  const posts = (await getCollection("stories"))
    .filter((post) => !post.data.draft)
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  return posts.map((post) => ({
    params: { id: post.id },
    props: post,
  }));
}
type Props = CollectionEntry<"stories">;

const posts = (await getCollection("stories"))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());



const post = Astro.props;
const { Content } = await render(post);

---

<MainLayout title={post.data.title} description={post.data.description}>
  <div class="story-container contained">
    <BackToPrevious href="/stories">Back to stories</BackToPrevious>
    
    <article class="story-article">
      <header>
        <div class="story-date">
          <FormattedDate date={post.data.date} />
        </div>
        <h1>{post.data.title}</h1>
    
          {
            post.data.tags && post.data.tags?.length > 0 ? (
              <div class="tags-grid">
                {post.data.tags.map((tag) => (
                  <a href={`/tags/${tag}`} class="tag-item">
                    <span class="tag-name">{tag}</span>
                  </a>
                ))}
              </div>
            ) : null
          }
      </header>
      <div class="story-content">
        <Content />
      </div>
    </article>
  </div>
</MainLayout>

<style>
  .story-container {
    width: 100%;
  }

  .story-article {
    width: 100%;
  }

  .story-content {
    width: 100%;
    text-wrap: pretty;
  }
</style>
