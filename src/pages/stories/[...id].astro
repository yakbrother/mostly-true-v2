---
import { type CollectionEntry, getCollection, render } from "astro:content";
import Layout from "@layouts/MainLayout.astro";
import FormattedDate from "@components/FormattedDate.astro";
import BackToPrevious from "@components/BackToPrevious.astro";


export async function getStaticPaths() {
  const posts = (await getCollection("stories"))
    .filter((post) => !post.data.draft)
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  return posts.map((post) => ({
    params: { id: post.id },
    props: post,
  }));
}
type Props = CollectionEntry<"stories">;

const posts = (await getCollection("stories"))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());



const post = Astro.props;
const { Content } = await render(post);
---

<Layout title={post.data.title} description={post.data.description}>
    <div class="animate">
      <BackToPrevious href="/stories">Back to stories</BackToPrevious>
    </div>
    <div class="story-header">
      <div class="animate story-meta">
        <div class="story-date">
          <FormattedDate date={post.data.date} />
        </div>
        &bull;
      </div>
      <h1 class="animate story-title">
        {post.data.title}
      </h1>
      {
        post.data.tags && post.data.tags?.length > 0 ? (
          <div class="animate story-tags">
            {post.data.tags.map((tag) => (
              <a
                href={`/tags/${tag}`}
                class="story-tag"
              >
                {tag}
              </a>
            ))}
          </div>
        ) : null
      }
    </div>
    <article class="animate">
      <Content />

    </article>
</Layout>
